# Hello, world!
#
# This is an example function named 'hello'
# which prints 'Hello, world!'.
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'


# Introduction
Uniform Manifold Approximation and Projection (UMAP) is an algorithm for dimensional reduction.The package that will be developed is suited to process small data with approximately 1,000 data points.

# Loading packages
```{r}
library(umap)
library(tidyverse)
library(magrittr)
```

# Importing the dataset
```{r}
data("iris")
iris
```

# Visualizing the dataset
```{r}
ggplot(data = iris, aes(x = Petal.Length, y = Petal.Width))+
  xlab("Petal Length")+
  ylab("Petal Width") +
  geom_point(aes(color = Species,shape=Species))+
  geom_smooth(method='lm')+
  ggtitle("Iris Petal Length vs Width")
```

# Perprocessing the data for umap
```{r}
# Adding a unique row ID
iris <- iris %>%
  mutate(ID=row_number())

# Creating a dataframe with all categorical variables with the unique row ID

iris_meta <- iris %>%
  select(ID, Species)

```

# Performing UMAP
```{r}
set.seed(142)
umap_fit <- iris %>%
  select(where(is.numeric)) %>%
  column_to_rownames("ID") %>%
  scale() %>%
  umap()
umap_df <- umap_fit$layout %>%
  as.data.frame()%>%
  rename(UMAP1="V1",
         UMAP2="V2") %>%
  mutate(ID=row_number())%>%
  inner_join(iris_meta, by="ID")
```

# UMAP Plot
```{r}
umap_df %>%
  ggplot(aes(x = UMAP1,
             y = UMAP2,
             color = Species))+
  geom_point()+
  labs(x = "UMAP1",
       y = "UMAP2",
      subtitle = "UMAP plot")
```
